% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/connectivity_estimation.finite_settlement.R
\encoding{UTF-8}
\name{d.rel.conn.finite.settlement}
\alias{d.rel.conn.finite.settlement}
\title{Frequency of the number of marked settlers for finite total settlement}
\usage{
d.rel.conn.finite.settlement(p, n.obs, n.settlers, n.bootstraps = 1000,
  n.origin = 0:n.settlers)
}
\arguments{
\item{p}{Fraction of individuals (i.e., eggs) marked in the source population}

\item{n.obs}{Total number of settlers collected}

\item{n.settlers}{Total number of settlers at the destination site from which
the \code{n.obs} (\code{<=n.settlers}) settlers are collected}

\item{n.bootstraps}{Number of simulated samples to generate to calculate
relative frequencies. Defaults to \code{1000}.}

\item{n.origin}{Vector of integers of possible numbers of settlers in the
  cohort that originated at the site of marking. All values should be
  integers \code{<=n.settlers}.  Defaults to \code{0:n.settlers}}
}
\value{
A list with the following elements: \describe{\item{res}{matrix with
  \code{n.obs+1} rows and \code{length(n.origin)} columns, the element of
  which are counts indicating the number of times among the
  \code{n.bootstraps} samples that \code{k} marked settlers are found among
  the \code{n.obs} settlers collected from the total settlement pool of
  \code{n.settlers} individuals. Results for \code{k} marked settlers are in
  row \code{k+1} of the matrix, the first row being used for \code{k=0}.  The
  row names of the matrix reflect the value of \code{k}, whereas columns
  names reflect the elements of \code{n.origin}.}\item{phi}{relative
  connectivity values corresponding to each column of \code{res}}}
}
\description{
This function calculates the relative frequency with which a number of marked
settlers would be observed as a function of relative connectivity, sample
size and the total number of settlers to a site. Probable frequency of
observation is calculated by randomly drawing \code{n.bootstraps} artificial
samples and calculating for each the number of would-be marked settlers in
the sample for all values of \code{n.origin}, the true number of settlers from
the marked site in the entire cohort. \code{n.origin} is related to relative
connectivity, \code{phi}, by \code{phi=n.origin/n.settlers}.
}
\examples{
library(ConnMatTools)

k <- 10 # Number of marked settlers among sample
n.obs <- 87 # Number of settlers in sample
n.settlers <- 100 # Total size of settler pool

p <- 0.4 # Fraction of eggs that was marked
phi <- seq(0,1,length.out=101) # Values for relative connectivity

# Probability distribution assuming infinite settler pool and uniform prior
drc <- d.rel.conn.unif.prior(phi,p,k,n.obs)
prc <- p.rel.conn.unif.prior(phi,p,k,n.obs)
qrc <- q.rel.conn.unif.prior(c(0.025,0.975),p,k,n.obs) # 95\% confidence interval

n.bootstraps <- 1000 # Increase to improve accuracy of brute force estimations

# Test with brute force finite settlement function and large (approx. infinite) settler pool
dbf <- d.rel.conn.finite.settlement(p,n.obs,7*n.obs,
                                    n.bootstraps=n.bootstraps)
dbf$d <- dbf$res[as.character(k),]

# Approximate quantiles - could be slow for large cohort sizes or numbers of bootstraps
dbf$q = quantile(do.call(c,sapply(1:length(dbf$d),function(i) rep(dbf$phi[i],dbf$d[i]))),
                 c(0.025,0.975))

# Normalize probability density
dbf$d <- dbf$d / sum(dbf$d)


# Finite settler pool
dfr <- d.rel.conn.finite.settlement(p,n.obs,n.settlers,
                                    n.bootstraps=n.bootstraps)
dfr$d <- dfr$res[as.character(k),]

# Approximate quantiles - could be slow for large cohort sizes or numbers of bootstraps
dfr$q = quantile(do.call(c,sapply(1:length(dfr$d),function(i) rep(dfr$phi[i],dfr$d[i]))),
                 c(0.025,0.975))

# Normalize probability density
dfr$d <- dfr$d / sum(dfr$d)

# Make a plot of different distributions
plot(phi,drc,type="l",main="Probability of relative connectivity values",
     xlab=expression(phi),ylab="Probability density")
lines(phi,prc,col="blue")
lines(dbf$phi,dbf$d/diff(dbf$phi[1:2]),col="black",lty="dashed")
lines(dfr$phi,dfr$d/diff(dfr$phi[1:2]),col="red",lty="dashed")
abline(v=qrc,col="black")
abline(v=dbf$q,col="black",lty="dashed")
abline(v=dfr$q,col="red",lty="dashed")
}
\author{
David M. Kaplan \email{dmkaplan2000@gmail.com}
}
\references{
Kaplan et al. (submitted) Uncertainty in marine larval
  connectivity estimation
}
\seealso{
Other connectivity.estimation: \code{\link{d.rel.conn.beta.prior}},
  \code{\link{p.rel.conn.beta.prior}},
  \code{\link{q.rel.conn.beta.prior}},
  \code{\link{q.rel.conn.beta.prior.func}};
  \code{\link{d.rel.conn.dists.func}},
  \code{\link{p.rel.conn.dists.func}},
  \code{\link{q.rel.conn.dists.func}};
  \code{\link{d.rel.conn.multiple}},
  \code{\link{p.rel.conn.multiple}},
  \code{\link{q.rel.conn.multiple}},
  \code{\link{q.rel.conn.multiple.func}};
  \code{\link{d.rel.conn.unif.prior}},
  \code{\link{p.rel.conn.unif.prior}},
  \code{\link{q.rel.conn.unif.prior}};
  \code{\link{dual.mark.transmission}};
  \code{\link{optim.rel.conn.dists}};
  \code{\link{r.marked.egg.fraction}}
}

